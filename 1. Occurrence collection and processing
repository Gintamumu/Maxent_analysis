1. Occurrence collection and processing

a.Occurrence collection

Database or other sources:
GBIF (https://www.gbif.org/)
iNaturalist (https://www.inaturalist.org/)
NSII (http://www.nsii.org.cn/2017/home.php)
IUCN (https://www.iucnredlist.org/)
CFH (https://www.cfh.ac.cn/)
PPBC (https://ppbc.iplant.cn/)
Research paper
Field observation
....

b.Processing

(1) Specimen identification
(2) Confirm Address
(3) Completion of longitude and latitude information

经纬度拾取坐标系统 https://api.map.baidu.com/lbsapi/getpoint/index.html
经纬度在线查询工具 https://map.yanue.net/
中国植物标本馆名录 https://www.cvh.ac.cn/topics/herbaria.php
世界标本馆List of herbaria https://en.wikipedia.org/wiki/List_of_herbaria
世界标本馆缩写查询 https://sweetgum.nybg.org/science/ih/
谷歌地图 https://www.google.com/maps/

(4) Data integration (Species,Latitude,Longitude,elevation,Date,day,month,year,Source,specimen or photo link)
(5) Convert excel file to csv files

csv file Example:
##species	lat	lon	elevation	Date	day	month	year	Source
##Ficus altissima	11.633333	99.616667	240	2002-08-25T00:00:00	25	8	2002	GBIF
##Ficus altissima	28.035278	98.602222	1650	1997-09-12T00:00:00	12	9	1997	GBIF
##Ficus altissima	25.4425	98.854167	1000	1998-10-19T00:00:00	19	10	1998	GBIF


(6) Deduplication by excel
(7) Rarefraction (R script from Oskar Brattström, University of Glasgow, input csv files with species,lat,lon)

#Install
install.packages("dismo")
install.packages("maptools")
install.packages("spThin")
install.packages("naturalearth")
devtools::install_github("ropensci/rnaturalearth")
devtools::install_github("ropensci/rnaturalearthdata")
install.packages("rnaturalearth")

#load the package
library(rnaturalearth)
library(sp)
sp::plot(ne_countries())
sp::plot(ne_countries(type = "countries", scale = "small"))
library (dismo)
library(spThin)

#############################################################
i="Ficus_altissima_790.csv"
bicyclus <- read.table(i, header = TRUE, sep=",")
# finding coorindate limits for species (+1 buffer)
min.x <- (min(bicyclus$lon, na.rm = TRUE))-1
max.x <- (max(bicyclus$lon, na.rm = TRUE))+1
min.y <- (min(bicyclus$lat, na.rm = TRUE))-1
max.y <- (max(bicyclus$lat, na.rm = TRUE))+1
mapname <- paste(bicyclus$species[1],".pdf", sep="")
# save pdf of plot
pdf(mapname)
plot(ne_countries(), xlim=c(min.x,max.x), ylim=c(min.y,max.y), main= bicyclus$species[1], axes=TRUE, col="light yellow")
# restore the box around the map
box()
# plot points
points(bicyclus$lon, bicyclus$lat, col='orange', pch=20, cex=0.75)
# plot points again to add a border, for better visibility
points(bicyclus$lon, bicyclus$lat, col='red', cex=0.75)
dev.off()

########################################################################################
thinname <- paste(bicyclus$species[1],"_1km", sep="")
thinnedbicyclus <- thin(bicyclus, long.col = "lon", lat.col = "lat", spec.col = "species", 
                        reps = 25, thin.par = 1, out.dir = "1km", write.files = TRUE,
                        write.log.file = TRUE, log.file = "rare1.txt", out.base = thinname,
                        max.files = 1, verbose = TRUE, locs.thinned.list.return = FALSE)
#save rarefied 1 km map
setwd("./1km/")
data.file <- paste(bicyclus$species[1],"_1km_thin1.csv", sep="")
mapname <- paste(bicyclus$species[1]," 1km", sep="")
mapfile <- paste(bicyclus$species[1],"_1km.pdf", sep="")
bicyclus.thin <- read.table(data.file, header = TRUE, sep=",")
# save pdf of plot
pdf(mapfile)
plot(ne_countries(), xlim=c(min.x,max.x), ylim=c(min.y,max.y), main= mapname, axes=TRUE, col="light yellow")
# restore the box around the map
box()
# plot points
points(bicyclus.thin$lon, bicyclus.thin$lat, col='orange', pch=20, cex=0.75)
# plot points again to add a border, for better visibility
points(bicyclus.thin$lon, bicyclus.thin$lat, col='red', cex=0.75)
dev.off()
########################################################################################








########################################################################################
thinname <- paste(bicyclus$species[1],"_2km", sep="")
thinnedbicyclus <- thin(bicyclus, long.col = "lon", lat.col = "lat", spec.col = "species", 
                        reps = 25, thin.par = 2, out.dir = "2km", write.files = TRUE,
                        write.log.file = TRUE, log.file = "rare2.txt", out.base = thinname,
                        max.files = 1, verbose = TRUE, locs.thinned.list.return = FALSE)
#save rarefied 2 km map
setwd("./2km/")
data.file <- paste(bicyclus$species[1],"_2km_thin1.csv", sep="")
mapname <- paste(bicyclus$species[1]," 2km", sep="")
mapfile <- paste(bicyclus$species[1],"_2km.pdf", sep="")
bicyclus.thin <- read.table(data.file, header = TRUE, sep=",")
# save pdf of plot
pdf(mapfile)
plot(ne_countries(), xlim=c(min.x,max.x), ylim=c(min.y,max.y), main= mapname, axes=TRUE, col="light yellow")
# restore the box around the map
box()
# plot points
points(bicyclus.thin$lon, bicyclus.thin$lat, col='orange', pch=20, cex=0.75)
# plot points again to add a border, for better visibility
points(bicyclus.thin$lon, bicyclus.thin$lat, col='red', cex=0.75)
dev.off()
########################################################################################





########################################################################################
thinname <- paste(bicyclus$species[1],"_3km", sep="")
thinnedbicyclus <- thin(bicyclus, long.col = "lon", lat.col = "lat", spec.col = "species", 
                        reps = 25, thin.par = 3, out.dir = "3km", write.files = TRUE,
                        write.log.file = TRUE, log.file = "rare3.txt", out.base = thinname,
                        max.files = 1, verbose = TRUE, locs.thinned.list.return = FALSE)
#save rarefied 3 km map
setwd("./3km/")
data.file <- paste(bicyclus$species[1],"_3km_thin1.csv", sep="")
mapname <- paste(bicyclus$species[1]," 3km", sep="")
mapfile <- paste(bicyclus$species[1],"_3km.pdf", sep="")
bicyclus.thin <- read.table(data.file, header = TRUE, sep=",")
# save pdf of plot
pdf(mapfile)
plot(ne_countries(), xlim=c(min.x,max.x), ylim=c(min.y,max.y), main= mapname, axes=TRUE, col="light yellow")
# restore the box around the map
box()
# plot points
points(bicyclus.thin$lon, bicyclus.thin$lat, col='orange', pch=20, cex=0.75)
# plot points again to add a border, for better visibility
points(bicyclus.thin$lon, bicyclus.thin$lat, col='red', cex=0.75)
dev.off()
########################################################################################







########################################################################################
thinname <- paste(bicyclus$species[1],"_4km", sep="")
thinnedbicyclus <- thin(bicyclus, long.col = "lon", lat.col = "lat", spec.col = "species", 
                        reps = 25, thin.par = 4, out.dir = "4km", write.files = TRUE,
                        write.log.file = TRUE, log.file = "rare4.txt", out.base = thinname,
                        max.files = 1, verbose = TRUE, locs.thinned.list.return = FALSE)
#save rarefied 4 km map
setwd("./4km/")
data.file <- paste(bicyclus$species[1],"_4km_thin1.csv", sep="")
mapname <- paste(bicyclus$species[1]," 4km", sep="")
mapfile <- paste(bicyclus$species[1],"_4km.pdf", sep="")
bicyclus.thin <- read.table(data.file, header = TRUE, sep=",")
# save pdf of plot
pdf(mapfile)
plot(ne_countries(), xlim=c(min.x,max.x), ylim=c(min.y,max.y), main= mapname, axes=TRUE, col="light yellow")
# restore the box around the map
box()
# plot points
points(bicyclus.thin$lon, bicyclus.thin$lat, col='orange', pch=20, cex=0.75)
# plot points again to add a border, for better visibility
points(bicyclus.thin$lon, bicyclus.thin$lat, col='red', cex=0.75)
dev.off()
########################################################################################





########################################################################################
thinname <- paste(bicyclus$species[1],"_5km", sep="")
thinnedbicyclus <- thin(bicyclus, long.col = "lon", lat.col = "lat", spec.col = "species", 
                        reps = 25, thin.par = 5, out.dir = "5km", write.files = TRUE,
                        write.log.file = TRUE, log.file = "rare5.txt", out.base = thinname,
                        max.files = 1, verbose = TRUE, locs.thinned.list.return = FALSE)
#save rarefied 5 km map
setwd("./5km/")
data.file <- paste(bicyclus$species[1],"_5km_thin1.csv", sep="")
mapname <- paste(bicyclus$species[1]," 5km", sep="")
mapfile <- paste(bicyclus$species[1],"_5km.pdf", sep="")
bicyclus.thin <- read.table(data.file, header = TRUE, sep=",")
# save pdf of plot
pdf(mapfile)
plot(ne_countries(), xlim=c(min.x,max.x), ylim=c(min.y,max.y), main= mapname, axes=TRUE, col="light yellow")
# restore the box around the map
box()
# plot points
points(bicyclus.thin$lon, bicyclus.thin$lat, col='orange', pch=20, cex=0.75)
# plot points again to add a border, for better visibility
points(bicyclus.thin$lon, bicyclus.thin$lat, col='red', cex=0.75)
dev.off()
########################################################################################


(8) Native distribution area Crop based on KEW POWO (https://powo.science.kew.org/) by excel


(9) Remove the distribution points of cultivation or introduction


(10) Confirmation of longitude and latitude information (Arcgis Map)
a.Input csv distribution points files
b.Input world map and environmental variables layers


(11) Mercator coordinate system convert and formate standardization (R script)

Decimal2Mercator.R
#批量处理
# 安装和加载必要的库  
if (!requireNamespace("sf", quietly = TRUE)) install.packages("sf")  
library(sf)  
  
# 设置工作目录，这里需要替换为你的CSV文件所在的文件夹路径  
setwd("E:/开放课题/05/01_ENM/01_Distribution_data/5km_native_mercator")  
  
# 获取文件夹中所有的CSV文件  
csv_files <- list.files(pattern = "\\.csv$", full.names = TRUE)  
  
# 遍历CSV文件  
for (file in csv_files) {  
  # 读取CSV文件  
  points_df <- read.csv(file)  
 
# 检查并删除包含缺失经纬度值的行  
  if (any(is.na(points_df$lon)) || any(is.na(points_df$lat))) {  
    points_df <- points_df[!is.na(points_df$lon) & !is.na(points_df$lat), ]  
  }  

  # 假设CSV中的经纬度列名为"X"和"Y"（如果不同，请相应更改）  	

  points_sf <- st_as_sf(points_df, coords = c("lon", "lat"), crs = 4326)  
    
  # 转换投影到Mercator  
  points_mercator <- st_transform(points_sf, 3857)  
    
  # 提取坐标并添加到数据框中  
  mercator_coords <- st_coordinates(points_mercator)  
  # 假设不需要原始经纬度列，如果需要，请调整setdiff中的参数  
  mercator_df <- data.frame(mercator_coords, points_df[setdiff(names(points_df), c("lon_mer", "lat_mer"))])  # 修改为X, Y或longitude, latitude  
    
  # 构造输出文件名  
  output_file <- gsub("\\.csv$", "_mercator.csv", basename(file))  
    
  # 导出为CSV  
  write.csv(mercator_df, output_file, row.names = FALSE)  
    
  cat("文件", file, "已处理并保存为", output_file, "\n")  
}


#### Mercator_standardization
csv file Example:
##species	x	y	pr_ab	lon	lat
##Ficus_altissima	11509108.98	2676293.272	1	103.388085	23.36561
##Ficus_altissima	10974836.87	2806350.872	1	98.588637	24.433739
##Ficus_altissima	11126499.88	3012855.112	1	99.951049	26.11116



(12) Value check--Extract the corresponding environmental variable values of distribution points(R script, from Oskar Brattström,University of Glasgow)


#######批量
##########修改为批量读取某个文件夹中的tif并提取变量

# 设置选项以避免rgdal的警告  
options("rgdal_show_exportToProj4_warnings"="none")  
  
# 加载必要的库  
library(raster)  

# 加载或定义你的坐标点  
file_prefix <- "Ficus_benjamina_5km_thin1_native_rmsuspicious2_985_mercator_s" 

records <- read.csv(paste0(file_prefix,".csv"), header = TRUE, stringsAsFactors = FALSE)  
DataPoints1 <- records[, c("x", "y")]  # 确保x和y是你的经纬度或投影坐标列  
  
# 设定tif文件所在的文件夹  

tif_folder <- "G:/开放课题/05/01_ENM/02_Environmental_data/02asc2raster_world/04soilgrid_earthenv_worldclim_5km_unified_layers/09Mask_tif/tif_mask"

  
# 列出tif文件夹中的所有tif文件  
tif_files <- list.files(tif_folder, pattern = "\\.tif$", full.names = TRUE)  
  
# 初始化一个空的列表来存储提取的变量  
extracted_vars <- list()  
  
# 循环遍历tif文件并提取变量  
for (tif_file in tif_files) {  
  # 从文件名中提取变量名（假设文件名遵循一定的命名规则）  
  varname <- tools::file_path_sans_ext(basename(tif_file))  
    
  # 读取tif文件  
  raster_obj <- raster(tif_file)  
    
  # 提取变量值  
  extracted_value <- extract(raster_obj, DataPoints1)  
    
  # 将提取的值添加到列表中，使用变量名作为键  
  extracted_vars[[varname]] <- extracted_value  
}  
  
# 将提取的变量合并到原始记录数据框中  
# 注意：这里我们假设所有tif文件的DataPoints1都有对应的值（即没有NAs由于坐标不匹配）  
# 实际上，你可能需要处理这种情况（例如，通过计算平均值、中位数或忽略NAs）  
for (varname in names(extracted_vars)) {  
  records[[varname]] <- extracted_vars[[varname]]  
}  
  
# 写入CSV文件  
write.csv(records, paste0(file_prefix,".ValueCheck.csv"), row.names=FALSE, quote=FALSE)




(13) Removing the distribution points with missing environmental variable values or filling in the missing environmental variable values of distribution points


a. Removing the distribution points with missing environmental variable values
########Multiple samples

# 加载必要的库（虽然在这个例子中主要使用的是基础R功能）  
# library(dplyr)  # 如果需要进行更复杂的数据处理，可以取消注释  
  
# 设置工作目录（如果你的CSV文件都在这个目录下）  
setwd("G:/开放课题/05/01_ENM/22_rmNA")  
  
# 获取当前目录下所有的CSV文件  
csv_files <- list.files(pattern = "\\.csv$")  
  
# 遍历每个CSV文件  
for (file in csv_files) {  
  # 读取CSV文件  
  input_file <- file.path(getwd(), file)  
  data <- read.csv(input_file, header = TRUE, stringsAsFactors = FALSE)  
    
  # 去除包含NA的行  
  cleaned_data <- na.omit(data)  
    
  # 构造输出文件名  
  output_file <- gsub("\\.csv$", "_cleaned.csv", file)  # 假设原文件名是data.csv，则输出名为data_cleaned.csv  
  output_file <- file.path(getwd(), output_file)  
    
  # 导出新的CSV文件  
  write.csv(cleaned_data, file = output_file, row.names = FALSE)  
    
  # 打印消息（可选）  
  cat("已去除", file, "中的NA行并保存为：", output_file, "\n")  
}


b. filling in the missing environmental variable values of distribution points
"NA Value check by Acrmap.docx" file could be refer to "https://github.com/Gintamumu/Colour_pattern_biogeography/tree/main/03_Environmental_value_add_and_check"



(14) SWD formate convert

swd formate file example:
##species	X	Y	aspectcos_mask	aspectsin_mask	bdod_0.5_mask
##Ficus altissima	11509108.98	2676293.272	0.208117843	-0.154846191	126.2010803
##Ficus altissima	10974836.87	2806350.872	0.121181607	0.029759424	106.302742
##Ficus altissima	11126499.88	3012855.112	-0.312497437	-0.331383467	111.7556992


