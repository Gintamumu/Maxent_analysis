2. Environmental Variables layers collection and processing

a. Environamental variables collection

Worldclim  https://worldclim.org/data/worldclim21.html  (there are version 2.1 and 1.4), Climate, Current, Past (lgm, lig, mh), Future (2050, 2070)
Soilgrid   https://files.isric.org/soilgrids/latest/data_aggregated/; https://soilgrids.org/, Soil, Current
EarthEnv   https://www.earthenv.org/topography, topography, Current
##Climond    https://www.climond.org/, climate, Current and Future (Optional)
##Chelsa     https://chelsa-climate.org/, Current and Future (Optional)

b. Processing

(1) tif files download

(2) add Meter unit and projection Mercator (arcmap)

Project Raster

ArcToolbox--> Data Management Tools --> Projections and Transformations --> Raster --> Project Raster

Output Coordinate System = World_Mercator

(3) Unified resolution 

Resample

ArcToolbox-->Data Management Tools--> Raster --> Raster Processing --> Resample

Set Output Cell Size

X=3960.345031, Y=3960.345031


(4) Intersect (R script)

# 安装必要的包  
# install.packages("raster")  
# install.packages("sf")  
# install.packages("stars")  # 如果tif文件很大或需要更高级的处理，可以考虑使用stars包  
  
# 加载包  
library(raster)  
library(sf)  
  
# 设置输入tif文件的路径  
file1 <- "E:/开放课题/05/01_ENM/02_Environmental_data/02asc2raster_world/04soilgrid_earthenv_worldclim_5km_unified_layers/05tif_pro_addM_5km_mask_pro_Mercator/01Current/aspectcos_mer.tif"  
file2 <- "E:/开放课题/05/01_ENM/02_Environmental_data/02asc2raster_world/04soilgrid_earthenv_worldclim_5km_unified_layers/05tif_pro_addM_5km_mask_pro_Mercator/01Current/bdod_0-5_mer.tif"  
file3 <- "E:/开放课题/05/01_ENM/02_Environmental_data/02asc2raster_world/04soilgrid_earthenv_worldclim_5km_unified_layers/05tif_pro_addM_5km_mask_pro_Mercator/01Current/bio01_mer.tif"  
 
# 读取tif文件为raster对象  
ras1 <- raster(file1)  
ras2 <- raster(file2)  
ras3 <- raster(file3)  
  
# 确保所有raster对象具有相同的CRS（这里假设它们已经是Mercator）  
# 如果不是，你需要先转换它们  
# crs(ras1) <- "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs"  
# 类似地设置ras2和ras3的CRS  
  
# 提取每个raster的extent，并找到它们的交集  
ext1 <- extent(ras1)  
ext2 <- extent(ras2)  
ext3 <- extent(ras3)  
# intersect_ext <- st_as_sfc(st_bbox(st_intersection(st_as_sf(st_as_sfc(ext1)),   
                                                  # st_as_sf(st_as_sfc(ext2))),   
                                   # st_as_sf(st_as_sfc(ext3)))))  
  
# 注意：上面的代码尝试将extent转换为多边形，然后找到它们的交集，但这可能不是最高效的方法  
# 一种更简单但可能不太精确的方法是直接计算坐标框的交集  
intersect_ext_simple <- st_as_sfc(st_bbox(c(xmin = max(ext1@xmin, ext2@xmin, ext3@xmin),  
                                          xmax = min(ext1@xmax, ext2@xmax, ext3@xmax),  
                                          ymin = max(ext1@ymin, ext2@ymin, ext3@ymin),  
                                          ymax = min(ext1@ymax, ext2@ymax, ext3@ymax))))  
  
# 假设intersect_ext_simple足够好，我们用它来继续  
# 注意：这里intersect_ext_simple的CRS是未知的，我们需要手动设置  
crs_string <- crs(ras1)  # 假设所有raster的CRS相同  
intersect_polygon <- st_set_crs(intersect_ext_simple, crs = crs_string)  
  
# 写入Shapefile  
output_shp <- "E:/开放课题/05/01_ENM/02_Environmental_data/02asc2raster_world/04soilgrid_earthenv_worldclim_5km_unified_layers/09Mask/intersect/intersection_area.shp"  
st_write(intersect_polygon, output_shp)  
  
# 打印消息  
cat("交集地理范围已导出为Shapefile：", output_shp, "\n")


(5) Mask (arcmap)

Extract by Mask

ArcToolbox --> Spatial Analyst Tools --> Exraction --> Extract by Mask

Input raster of feature mask data = intersect.tif


(6) Convert tif to asc files (arcmap)

Raster to ASCII

ArcToolbox --> Conversion Tools --> From Raster --> Raster to ASCII

edit .txt to .asc

(7) current dataset with both tif and asc, tif for flexsdm and value check, asc for maxent

(8) future and past dataset will have both future or past climate variables and current soil and topography variables

(9) Makesure that names of different periods dataset have same names of factors for maxent analysis



(10)(For Chelsa data) 
手动为变量设置比例和偏移量。这可以通过首先将栅格值与“比例”值相乘，然后加上“偏移”值来完成。
In this case the scale and offset has to be set manually for the variables. This can be done by first multiplying the raster values with the ‘scale’ value and then adding the ‘offset’ value.

在ArcMap中手动为GeoTIFF文件中的变量设置比例（Scale）和偏移量（Offset）通常涉及栅格数据的重新计算或调整。以下是在ArcMap中实现这一过程的步骤：
1.加载GeoTIFF文件：
- 打开ArcMap，并加载包含你需要调整比例和偏移量的GeoTIFF文件。
2.打开栅格计算器：
- 在ArcMap的工具栏中，找到并打开“栅格计算器”（Raster Calculator）。这通常位于“空间分析工具”（Spatial Analyst Tools）下的“地图代数”（Map Algebra）工具箱中。
3.构建表达式：
- 在栅格计算器中，你需要构建一个表达式来应用比例和偏移量。假设你的GeoTIFF文件名为“raster.tif”，比例值为“scale”，偏移量为“offset”，则表达式可能如下：
                                      "raster.tif" * scale + offset
- 注意，在ArcMap的栅格计算器中，你可能需要为变量名（如“raster.tif”）加上双引号，并确保比例和偏移量已经作为已知的数值或变量在表达式中。
4.执行计算：
- 输入完表达式后，点击“确定”（OK）或“计算”（Evaluate）来执行计算。这将生成一个新的栅格数据集，其中包含了应用比例和偏移量后的值。
5.保存结果：
- 将计算后的栅格数据集保存为一个新的文件。确保选择适当的文件格式和位置来保存你的数据。
6.验证结果：
- 加载新生成的栅格数据集，并检查其属性以确定比例和偏移量是否正确应用。你可以通过查看栅格值的直方图或进行其他统计分析来验证这一点。
需要注意的是，上述步骤假设你已经知道GeoTIFF文件中的比例和偏移量值。如果你不确定这些值，你可能需要查阅文件的元数据或联系数据的提供者来获取这些信息。
此外，如果你在处理过程中遇到任何问题，例如栅格计算器无法识别你的GeoTIFF文件或表达式构建失败，请确保你的ArcMap和ArcGIS Desktop版本支持GeoTIFF文件的比例和偏移量处理，并且你已经正确安装了所有必要的更新和补丁。在某些情况下，你可能需要使用更高版本的ArcGIS软件或更新你的GDAL库来处理这些文件。






